// <auto-generated />
using System;
using Catering.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Catering.Migrations
{
    [DbContext(typeof(cateringserviceDBContext))]
    partial class cateringserviceDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Catering.Models.CateringDetail", b =>
                {
                    b.Property<int>("TurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("turID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Aktif")
                        .HasColumnName("aktif")
                        .HasColumnType("bit");

                    b.Property<int>("CateringId")
                        .HasColumnName("cateringID")
                        .HasColumnType("int");

                    b.Property<string>("Cateringfirmabilgi")
                        .HasColumnName("cateringfirmabilgi")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Eklemetarihi")
                        .HasColumnName("eklemetarihi")
                        .HasColumnType("datetime");

                    b.Property<string>("Icerik")
                        .HasColumnName("icerik")
                        .HasColumnType("ntext");

                    b.Property<bool?>("Silindi")
                        .HasColumnName("silindi")
                        .HasColumnType("bit");

                    b.Property<byte?>("Sira")
                        .HasColumnName("sira")
                        .HasColumnType("tinyint");

                    b.HasKey("TurId");

                    b.HasIndex("CateringId");

                    b.ToTable("CateringDetail");
                });

            modelBuilder.Entity("Catering.Models.Cateringler", b =>
                {
                    b.Property<int>("CateringId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cateringID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Aktif")
                        .HasColumnName("aktif")
                        .HasColumnType("bit");

                    b.Property<string>("Cateringadi")
                        .HasColumnName("cateringadi")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("Silindi")
                        .HasColumnName("silindi")
                        .HasColumnType("bit");

                    b.HasKey("CateringId");

                    b.ToTable("Cateringler");
                });

            modelBuilder.Entity("Catering.Models.Kullanicilar", b =>
                {
                    b.Property<int>("KullaniciId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("kullaniciID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adi")
                        .HasColumnName("adi")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("Aktif")
                        .HasColumnName("aktif")
                        .HasColumnType("bit");

                    b.Property<string>("Eposta")
                        .HasColumnName("eposta")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Parola")
                        .HasColumnName("parola")
                        .HasColumnType("nvarchar(35)")
                        .HasMaxLength(35);

                    b.Property<bool?>("Silindi")
                        .HasColumnName("silindi")
                        .HasColumnType("bit");

                    b.Property<string>("Soyadi")
                        .HasColumnName("soyadi")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Telefon")
                        .HasColumnName("telefon")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<bool?>("Yetki")
                        .HasColumnName("yetki")
                        .HasColumnType("bit");

                    b.HasKey("KullaniciId");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("Catering.Models.Menuler", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("menuID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Aktif")
                        .HasColumnName("aktif")
                        .HasColumnType("bit");

                    b.Property<string>("Baslik")
                        .HasColumnName("baslik")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool?>("Silindi")
                        .HasColumnName("silindi")
                        .HasColumnType("bit");

                    b.Property<byte?>("Sira")
                        .HasColumnName("sira")
                        .HasColumnType("tinyint");

                    b.Property<string>("Url")
                        .HasColumnName("url")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("UstId")
                        .HasColumnName("ustID")
                        .HasColumnType("int");

                    b.HasKey("MenuId");

                    b.ToTable("menuler");
                });

            modelBuilder.Entity("Catering.Models.Sayfalar", b =>
                {
                    b.Property<int>("SayfaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sayfaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Aktif")
                        .HasColumnName("aktif")
                        .HasColumnType("bit");

                    b.Property<string>("Baslik")
                        .HasColumnName("baslik")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Icerik")
                        .HasColumnName("icerik")
                        .HasColumnType("ntext");

                    b.Property<bool?>("Silindi")
                        .HasColumnName("silindi")
                        .HasColumnType("bit");

                    b.HasKey("SayfaId");

                    b.ToTable("Sayfalar");
                });

            modelBuilder.Entity("Catering.Models.Yorum", b =>
                {
                    b.Property<int>("YorumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("yorumID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Aktif")
                        .HasColumnName("aktif")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Eklemetarihi")
                        .HasColumnName("eklemetarihi")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Silindi")
                        .HasColumnName("silindi")
                        .HasColumnType("bit");

                    b.Property<int>("TurId")
                        .HasColumnName("turID")
                        .HasColumnType("int");

                    b.Property<int>("UyeId")
                        .HasColumnName("uyeID")
                        .HasColumnType("int");

                    b.Property<string>("Yorum1")
                        .HasColumnName("yorum")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("YorumId");

                    b.HasIndex("TurId");

                    b.HasIndex("UyeId");

                    b.ToTable("Yorum");
                });

            modelBuilder.Entity("Catering.Models.CateringDetail", b =>
                {
                    b.HasOne("Catering.Models.Cateringler", "Catering")
                        .WithMany("CateringDetail")
                        .HasForeignKey("CateringId")
                        .HasConstraintName("FK_CateringDetail_Cateringler")
                        .IsRequired();
                });

            modelBuilder.Entity("Catering.Models.Yorum", b =>
                {
                    b.HasOne("Catering.Models.CateringDetail", "Tur")
                        .WithMany("Yorum")
                        .HasForeignKey("TurId")
                        .HasConstraintName("FK_Yorum_CateringDetail")
                        .IsRequired();

                    b.HasOne("Catering.Models.Kullanicilar", "Uye")
                        .WithMany("Yorum")
                        .HasForeignKey("UyeId")
                        .HasConstraintName("FK_Yorum_Kullanicilar")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
